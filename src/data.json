[
  {
    "id": 1,
    "name": "Record-Reveal",
    "techUsed": "Html, Css, JavaScript",
    "type": "Game",
    "description": "Record Reveal is a simple game where the player must pick squares and try and match their contents.  A correct guess awards points and reveals part of an album cover that is being pulled from the Discogs API.  Your scores are stored in local storage so you can keep trying to beat your Hi-Score!  Follow the links to view the site, or see the full ReadMe on Github.",
    "caseStudy": "<p>Record Reveal was the first project I made during the GA Software Immersive course.  We were given one week to make a game using only HTML, CSS, and JavaScript.</p><p>The original idea for the project was going to use the Spotify API to allow users to log into their account, pull their playlists, and be able to play the game with the playlists album art while also listening to said playlist.  This proved to be a bit beyond my skill level at the time, and I instead used the Discogs API to pull in random album titles from a few record labels that I enjoy.</p><p>I also implemented a logic that saves your scores in local storage, a la Wordle, so you can try and beat your high scores.<p>I plan to revisit this project in the near future to make it what I originally envisioned.</p>",
    "images": {
      "sm": "https://res.cloudinary.com/silverbeard/image/upload/v1652849341/Portfolio/screencapture-franksmatchgame-surge-sh-game-html-2022-05-17-14_48_55_jronpw.png",
      "lg": "https://res.cloudinary.com/silverbeard/image/upload/v1652849341/Portfolio/screencapture-franksmatchgame-surge-sh-game-html-2022-05-18-00_41_17_grrm7q.png"
    },
    "link": "https://franksmatchgame.surge.sh/",
    "gitLink": "https://github.com/frankmarra/Album_Art_Match_Game"
  },
  {
    "id": 2,
    "name": "Backlog",
    "techUsed": {
      "frontEnd": "React, CSS",
      "backEnd": "MongoDB, Mongoose, Express"
    },
    "type": "Game Management",
    "description": "Backlog aims to help you keep track of your library of games by sorting them into catagories of 'Not Started', 'In Progress', and 'Completed'. You are also able to add notes to the games in your library, so if you decide to take a break from one game and start another. This will make it easier to come back to a game later on and have useful information to look at.  Follow the links to view the site, or see the full ReadMe on Github.",
    "caseStudy": "<p>This is the second project I made during the GA Software Immersive course.  We were given one week to develop an app using React and MongoDB that had at least two models and full CRUD on one of them.</p><p>For this project, I pulled the game data from the RAWG API and created a database of users, games and notes, with full CRUD on each.</p>",
    "images": {
      "sm": "https://res.cloudinary.com/silverbeard/image/upload/v1652849342/Portfolio/screencapture-franksbacklog-herokuapp-users-6247019f3362d48c98e8ceba-2022-05-18-00_44_07_k07i3a.png",
      "lg": "https://res.cloudinary.com/silverbeard/image/upload/v1652849341/Portfolio/screencapture-franksbacklog-herokuapp-users-6247019f3362d48c98e8ceba-games-558972-2022-05-18-00_45_13_lvun6c.png"
    },
    "link": "https://franksbacklog.herokuapp.com/",
    "gitLink": "https://github.com/frankmarra/Backlog"
  },
  {
    "id": 3,
    "name": "Work-Track",
    "techUsed": {
      "frontEnd": "React, CSS",
      "backEnd": "PostgreSQL, Express, Sequelize, JWT Auth"
    },
    "type": "Time Management",
    "description": "Work-Track is here for your project management and tracking needs. Create an account. Add your business, positions, and employees to start tracking immediately! Easily pull up records for a range of dates and see how many worker hours were logged over the time period. WorkTrack is designed to make managing your employees simple & efficient.  This was a group project that we were able to spin up in a week.  Credit to my teammates, Bryan Sanchez and Jason McCoy.  Follow the links to view the site, or see the full ReadMe on Github.",
    "caseStudy": "<p>Work-Track was the third project for the GA Software Immersive course.  It was also a group project between myself and two of my fellow students, <a href=`https://www.linkedin.com/in/jasonwmccoy/`>Jason Mccoy</a> and <a href=`https//www.linkedin.com/in/bryvn1xx/`>Bryan Sanchez</a>.  This was the first larger scale project that I worked on, and it was very enjoyable to be able to work on this as a team.</p><p>We were given one week to create an app with React, PostgreSQL, and Sequelize.  I created and deployed the database, which consisted of six models, as well as created and styled the the 'entries' page of the app, which is displayed in the picture above.</p>",
    "images": {
      "sm": "https://res.cloudinary.com/silverbeard/image/upload/v1652849341/Portfolio/screencapture-worktrack-frontend-herokuapp-2022-05-18-00_46_35_eted0n.png",
      "lg": "https://i.imgur.com/HI4pEGe.png"
    },
    "link": "https://worktrack-frontend.herokuapp.com/",
    "gitLink": "https://github.com/MC-JSON/WorkTrack-FrontEnd"
  },
  {
    "id": 4,
    "name": "Co-Lab",
    "techUsed": {
      "frontEnd": "React, CSS",
      "backEnd": "PostgreSQL, Express, Sequelize, JWT Auth"
    },
    "type": "Music Social Network",
    "description": "How many unfinished songs do you have? The answer is always too many. Co-Lab is here to help. Upload your unfinished tracks with a description, genre, descriptive metadata, and what the song needs. Other Co-Lab users who are looking to collaborate can find your tracks by genre, metadata, and/or needs. If they like what they hear, they can send you a message asking to collaborate.  Follow the links to view the site, or see the full ReadMe on Github.",
    "caseStudy": "<p>Co-Lab is the fourth and final project for the GA Software Engineering Immersive course.  We were given twelve days for this project, and it had to include at least three models with full CRUD on one of them.</p><p>Originally, I built the database for this project with Python and Django, but due to CORS and auth issues, I had to make a decision a few days in to drop that database and rebuild it using PostgreSql and Sequelize.  While frustrating, it also proved to be very rewarding, as I learned how to create a database with Python and Django, and was also able to further my skills with PostgreSQL and Sequelize.</p><p>There are eleven models with about half of them being a many to many relationship, with full CRUD on all of them for the administrator.</p><p>This had been a project I wanted to create for a while, as I am constantly writing songs and looking for people to collaborate with.</p>",
    "images": {
      "sm": "https://res.cloudinary.com/silverbeard/image/upload/v1652930375/Portfolio/screencapture-frankcolab-herokuapp-2022-05-18-16_04_32_nmoi1f.png",
      "lg": "https://res.cloudinary.com/silverbeard/image/upload/v1652930375/Portfolio/screencapture-frankcolab-herokuapp-users-1-2022-05-18-16_06_07_ffgeuq.png"
    },
    "link": "https://frankcolab.herokuapp.com/",
    "gitLink": "https://github.com/frankmarra/Co-Lab-FrontEnd"
  }
]
